<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   version="1.1"
   id="svg10"
   xml:space="preserve"
   width="782.70837"
   height="796.39264"
   viewBox="0 0 782.70834 796.39264"
   sodipodi:docname="skills-logo.svg"
   inkscape:export-filename="C:\Users\PC\Desktop\skillsSup\back-end\site\atteli\logow.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   inkscape:version="1.0 (4035a4fb49, 2020-05-01)"><metadata
     id="metadata16"><rdf:RDF><cc:Work
         rdf:about=""><dc:format>image/svg+xml</dc:format><dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" /><dc:title></dc:title></cc:Work></rdf:RDF></metadata><defs
     id="defs14"><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath26"><path
         d="M 0,600 H 800 V 0 H 0 Z"
         id="path24" /></clipPath><meshgradient
       inkscape:collect="always"
       id="meshgradient58"
       gradientUnits="userSpaceOnUse"
       x="67.626297"
       y="45.241001"><meshrow
         id="meshrow60"><meshpatch
           id="meshpatch62"><stop
             path="c 221.583,0  443.165,0  664.748,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop64" /><stop
             path="c 0,169.839  0,339.679  0,509.518"
             style="stop-color:#000000;stop-opacity:1"
             id="stop66" /><stop
             path="c -221.583,0  -443.165,0  -664.748,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop68" /><stop
             path="c 0,-169.839  0,-339.679  0,-509.518"
             style="stop-color:#000000;stop-opacity:1"
             id="stop70" /></meshpatch></meshrow></meshgradient></defs><sodipodi:namedview
     fit-margin-bottom="0"
     fit-margin-right="0"
     fit-margin-left="0"
     fit-margin-top="0"
     inkscape:document-rotation="0"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1"
     objecttolerance="10"
     gridtolerance="10"
     guidetolerance="10"
     inkscape:pageopacity="0"
     inkscape:pageshadow="2"
     inkscape:window-width="1366"
     inkscape:window-height="705"
     id="namedview12"
     showgrid="false"
     inkscape:zoom="0.6725"
     inkscape:cx="416.45432"
     inkscape:cy="376.85345"
     inkscape:window-x="1912"
     inkscape:window-y="163"
     inkscape:window-maximized="1"
     inkscape:current-layer="g18" /><g
     id="g18"
     inkscape:groupmode="layer"
     inkscape:label="skills"
     transform="matrix(1.3333333,0,0,-1.3333333,-116.87906,776.85346)"><g
       id="g20"
       style="fill:url(#meshgradient58);fill-opacity:1"
       transform="matrix(2.0712598,0,0,2.0712598,-447.32909,-566.41011)"
       inkscape:export-filename="C:\Users\PC\Desktop\skillsSup\back-end\site\atteli\logow.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><g
         id="g22"
         clip-path="url(#clipPath26)"
         style="opacity:0.819355;fill:#000000;fill-opacity:1"><g
           id="g28"
           transform="translate(67.6263,196.3793)"
           style="fill:#000000;fill-opacity:1" /><g
           id="g32"
           transform="translate(209.9475,253.0556)"
           style="fill:#000000;fill-opacity:1" /><g
           id="g38"
           transform="translate(425.3174,253.0556)"
           style="fill:#000000;fill-opacity:1" /><g
           id="g42"
           transform="translate(531.6144,253.0556)"
           style="fill:#000000;fill-opacity:1" /><g
           id="g46"
           transform="translate(631.6151,196.3793)"
           style="fill:#000000;fill-opacity:1" /><g
           id="g50"
           transform="translate(434.5788,373.8053)"
           style="fill:#000000;fill-opacity:1"><path
             d="M 0,0 V -3.501 H 2.626 V 0.875 C 1.457,0.291 0.582,0 0,0 m 0,14.007 v -1.751 c 1.166,0.582 2.041,0.875 2.626,0.875 v 0.876 z m -0.875,5.252 -0.876,-3.501 H 0 v 3.501 z m -0.876,-31.514 -0.875,-3.502 c 0.875,0.581 2.626,0.875 5.252,0.875 -0.585,1.166 -0.875,2.042 -0.875,2.627 z m -1.751,-12.256 1.751,-0.876 H 0 v 2.627 h -1.751 c -1.169,-0.148 -1.751,-0.732 -1.751,-1.751 m 0,31.515 h 2.626 v 0.875 h -2.626 z m 0,101.547 v -0.875 c 0.582,0 1.457,-0.294 2.627,-0.875 v 1.75 z m -1.75,-143.568 h 1.75 v 0.875 h -1.75 z m 0,54.276 h 1.75 v 2.626 h -1.75 z m 0,61.279 c 2.188,-1.022 3.645,-2.773 4.377,-5.252 -0.585,0 -0.876,-0.294 -0.876,-0.876 L 0,73.535 H 1.751 L 0,76.161 v 1.751 H 2.626 L 1.751,79.663 0,78.788 c -1.022,0 -1.898,1.456 -2.626,4.376 H 0 L 1.751,82.289 V 84.04 H 0 c -2.92,0 -4.671,-1.169 -5.252,-3.502 M -6.128,16.633 c 0.581,-1.17 0.876,-2.045 0.876,-2.626 1.166,0 1.75,0.581 1.75,1.751 l -1.75,0.875 z m 0,6.128 h 1.751 v 0.875 h -1.751 z m -0.875,52.525 h 1.751 v 0.875 h -1.751 z m -0.876,-93.67 c 0,-1.897 -0.294,-3.358 -0.875,-4.376 l 1.751,-0.876 h 2.626 l 0.875,3.502 -2.626,1.75 z M -8.754,8.754 c 0.144,-1.169 0.728,-1.75 1.751,-1.75 l 0.875,1.75 z m 0,91.043 v -1.75 h 1.751 v 1.75 l 1.751,-0.875 c 0,0.581 0.29,0.875 0.875,0.875 v -1.75 h 0.875 v 1.75 c -0.584,0 -0.875,0.291 -0.875,0.876 1.751,0 2.626,0.875 2.626,2.626 l -1.751,0.876 c -2.773,-2.921 -4.524,-4.378 -5.252,-4.378 m 0,9.63 v -3.501 l 2.626,-1.751 v 1.751 c -1.169,1.456 -1.751,2.625 -1.751,3.501 z m 0,0.875 h 1.751 v 0.875 h -1.751 z m -1.751,-146.194 h 1.751 v 0.875 h -1.751 z m 0,128.686 v -0.875 h 0.875 c 1.166,0.581 2.042,0.875 2.627,0.875 v 2.626 h -0.876 c -0.875,0 -1.751,-0.875 -2.626,-2.626 M -9.63,0 c 0,-3.649 -0.875,-7.15 -2.626,-10.504 1.751,0 2.626,-0.876 2.626,-2.627 l 3.502,2.627 h 0.876 l 2.626,-1.751 0.875,1.751 c -1.169,0.58 -2.045,0.874 -2.626,0.874 v 1.751 c 0.143,1.166 0.728,1.751 1.751,1.751 -0.585,1.166 -0.876,2.042 -0.876,2.627 h -0.875 c 0,-2.336 -1.46,-4.378 -4.377,-6.129 l -0.876,1.751 v 2.627 l 2.627,3.502 v 0.875 c -0.585,0 -1.461,0.291 -2.627,0.875 m 2.627,91.919 c 0,-1.751 -0.585,-2.626 -1.751,-2.626 -1.17,0.581 -2.045,0.875 -2.627,0.875 l 1.751,-2.626 c -0.875,0 -1.751,-1.17 -2.626,-3.502 1.167,-0.585 2.042,-0.876 2.626,-0.876 v -1.75 l -0.875,-1.751 h 1.751 c 1.166,0 1.751,1.751 1.751,5.252 l 1.751,-0.875 v 1.751 h -0.876 l -1.751,-0.876 v 1.751 c 1.751,0 2.627,0.581 2.627,1.751 v 3.502 z m -6.128,-56.903 c 0.143,-1.169 0.728,-1.75 1.75,-1.75 v 1.75 z m 0,78.788 v -1.751 h 1.75 c 0,1.166 -0.584,1.751 -1.75,1.751 M -14.882,2.626 c 1.604,0 3.355,-0.585 5.252,-1.751 0.144,1.166 0.729,1.751 1.751,1.751 h 2.627 c 0,-3.501 0.875,-5.252 2.626,-5.252 v 1.751 c -1.46,4.083 -3.211,6.128 -5.253,6.128 0,-1.17 -0.585,-1.751 -1.751,-1.751 -0.584,1.166 -0.875,2.041 -0.875,2.626 h -0.876 c -0.875,0 -2.044,-1.17 -3.501,-3.502 m 0,17.509 v -2.627 c 2.332,0 3.501,-0.584 3.501,-1.75 l -0.875,-1.751 -1.75,0.875 h -0.876 c 0,-0.585 0.291,-0.875 0.876,-0.875 l -0.876,-1.751 c 0,-2.92 0.581,-4.377 1.751,-4.377 1.166,0.581 2.042,0.875 2.626,0.875 0,-0.584 0.291,-0.875 0.875,-0.875 l 0.876,4.377 -1.751,-0.875 c 0,0.581 -0.294,0.875 -0.876,0.875 l 3.502,6.128 c 0,0.875 -0.875,1.751 -2.626,2.626 z m 0,77.036 v -0.875 c 0.581,-1.169 0.876,-2.045 0.876,-2.626 h 1.75 v 0.875 c 0,0.875 -0.875,1.751 -2.626,2.626 m -1.751,-64.78 h 0.875 v 1.751 h -0.875 z m 0,2.625 h 0.875 v 1.751 h -0.875 z m 0.876,-45.52 c 0,-1.023 -0.585,-2.484 -1.751,-4.378 h 0.875 c 1.751,0.438 2.917,1.604 3.502,3.502 l -1.751,0.876 z m -1.751,127.809 v -3.501 h 2.626 l -1.751,2.627 c 0.582,0 0.876,0.29 0.876,0.874 z M -19.259,14.882 c 0,-0.585 -0.294,-1.46 -0.876,-2.626 h 2.627 v 2.626 z m -0.876,81.414 V 93.67 h 0.876 c 0,0.875 0.581,2.041 1.751,3.501 v 1.751 c -0.876,0 -1.751,-0.875 -2.627,-2.626 m -1.75,-118.181 v -0.875 c 0.581,0 1.456,-0.294 2.626,-0.876 v 1.751 z m 6.128,53.4 v -2.626 h 1.751 v -0.876 l -2.627,-3.501 c 0.582,0 0.876,-0.295 0.876,-0.875 l -1.751,-0.876 c -1.17,0 -1.751,1.166 -1.751,3.501 h -0.876 c 0,-2.335 -0.875,-3.501 -2.625,-3.501 V 21.01 l 2.625,1.751 h 0.876 V 21.01 h 0.875 c 3.502,0 7.003,2.627 10.505,7.879 h -5.252 v 2.626 z m -7.003,0.876 v -0.876 c 0.875,0 2.041,-0.585 3.501,-1.751 v 2.627 z m 7.878,75.285 c 0,-1.75 -0.585,-2.626 -1.751,-2.626 l -1.751,0.876 c 0,-1.751 -0.584,-2.627 -1.751,-2.627 l -1.75,0.876 c 0,-0.585 -0.295,-0.876 -0.875,-0.876 l 1.75,-3.502 5.253,4.378 h 0.875 l -0.875,-1.751 0.875,-4.377 h 0.876 c 0,3.501 1.166,5.252 3.501,5.252 v 0.876 c 0,0.875 -1.169,2.041 -3.501,3.501 z m -8.754,-140.942 h 0.875 v -1.751 h -0.875 z m 9.63,17.509 c -0.438,-2.773 -1.899,-5.109 -4.378,-7.003 v -0.876 c 2.917,-0.147 4.378,-1.023 4.378,-2.626 v -0.876 h -1.751 c -1.461,1.167 -2.627,1.751 -3.502,1.751 -1.607,0 -3.649,-3.211 -6.128,-9.63 1.166,0 1.751,-1.169 1.751,-3.501 l 1.751,0.876 h 2.626 c 1.166,-0.148 1.751,-0.733 1.751,-1.751 l -0.876,-1.751 c 0.582,-1.17 0.876,-2.045 0.876,-2.627 h 3.502 l -1.751,2.627 2.626,4.377 c -0.875,0 -2.045,0.581 -3.502,1.75 0,-0.584 -0.294,-0.875 -0.875,-0.875 v 1.751 h 1.751 v 5.253 h 1.751 c 0,-1.17 0.29,-1.751 0.875,-1.751 5.105,-0.585 8.316,-0.876 9.629,-0.876 v 1.751 c -1.75,1.894 -2.626,3.645 -2.626,5.253 -2.92,-0.585 -4.377,-1.17 -4.377,-1.751 -1.169,0.581 -2.045,0.875 -2.626,0.875 v 1.751 l 1.75,-0.875 h 1.751 v 0.875 h -2.626 c 2.332,2.479 3.502,4.815 3.502,7.003 -0.438,0 -2.189,0.291 -5.252,0.876 m -11.381,132.188 h 0.875 v 2.626 h -0.875 z m -0.875,-94.545 h 1.751 v 0.875 h -1.751 z m -1.751,-66.532 v -0.876 c 2.332,0 3.502,-0.584 3.502,-1.75 h 1.751 v 1.75 l -0.876,4.378 c -2.626,-1.17 -4.086,-2.336 -4.377,-3.502 m 0.875,17.508 -0.875,-1.75 v -0.876 h 2.626 v 0.876 c 0,1.166 -0.585,1.75 -1.751,1.75 m -0.875,67.407 v -0.875 c 1.166,0.581 2.041,0.875 2.626,0.875 v 2.627 c -0.875,0 -1.751,-0.876 -2.626,-2.627 m -0.876,-21.01 h 1.751 v 0.875 h -1.751 z m 0.876,11.381 c -0.585,-3.064 -0.876,-4.815 -0.876,-5.253 l 1.751,-0.875 c 0.144,1.166 0.728,1.75 1.751,1.75 0.582,0 0.876,-0.294 0.876,-0.875 2.331,0.875 3.501,1.751 3.501,2.626 -1.75,0 -4.086,0.876 -7.003,2.627 m -0.876,91.043 c 0,-1.17 -0.875,-1.751 -2.626,-1.751 v -0.876 h 1.751 c 1.019,0.582 2.188,0.876 3.502,0.876 v 1.751 z m -6.128,0.875 v -1.751 c 0.144,-1.169 0.729,-1.751 1.751,-1.751 l 0.876,1.751 z m -1.75,-152.322 v -1.751 h 2.626 c 0,1.166 0.29,1.751 0.875,1.751 -0.585,1.166 -0.875,2.042 -0.875,2.626 -0.876,0 -1.751,-0.875 -2.626,-2.626 m -0.876,-19.259 h 0.875 v 2.626 h -0.875 z m 0,168.079 h 0.875 v 1.751 h -0.875 z m 5.253,-72.659 v -0.875 c 0,-0.585 0.29,-0.876 0.875,-0.876 l -1.751,-3.501 c 1.166,-0.147 1.751,-0.732 1.751,-1.751 v -1.751 c 0,-1.169 -0.585,-1.751 -1.751,-1.751 -1.169,0 -1.751,0.582 -1.751,1.751 0.582,1.166 0.876,2.041 0.876,2.626 h -2.626 c 0,-1.169 -0.585,-1.751 -1.751,-1.751 v -3.502 c 1.751,0 3.792,-1.75 6.128,-5.252 1.604,1.313 4.814,3.064 9.63,5.252 h 0.875 l 1.75,-0.874 0.876,1.75 v 3.502 c -1.898,-2.336 -3.649,-3.502 -5.252,-3.502 v 0.875 c -0.585,0 -2.627,-1.459 -6.129,-4.376 -1.169,0 -1.75,0.581 -1.75,1.751 l 3.501,3.501 c 0,0.581 -0.584,2.917 -1.751,7.003 0.582,0 0.876,0.291 0.876,0.876 l -1.751,0.875 z m -7.879,70.034 h 0.875 v 1.75 h -0.875 z m 14.882,-0.876 v -5.253 h -0.875 c -1.751,0.291 -2.627,2.333 -2.627,6.129 -1.169,-0.148 -1.751,-0.733 -1.751,-1.751 -1.169,0.581 -2.045,0.875 -2.626,0.875 -2.626,-1.17 -4.086,-2.336 -4.377,-3.502 l -3.501,1.751 c 0,-0.585 -0.295,-0.875 -0.876,-0.875 l 0.876,-1.751 v -0.876 l -0.876,-1.751 h 2.626 c 0,1.751 0.582,2.627 1.751,2.627 h 1.751 c 1.166,0 1.751,-0.876 1.751,-2.627 h 1.751 v 1.751 h 2.626 c 0.729,0 2.188,-1.46 4.377,-4.376 v -0.876 l -3.502,1.751 v -0.875 c 2.189,-3.502 3.646,-5.253 4.378,-5.253 l 0.875,1.751 c -1.169,0 -1.751,0.581 -1.751,1.751 1.313,6.418 3.064,9.629 5.252,9.629 v 3.501 h -0.875 c -1.46,-1.169 -2.92,-1.75 -4.377,-1.75 m -18.384,-158.45 h 0.875 v 1.751 h -0.875 z m 0,162.827 v -3.501 c 0.876,0 1.751,0.874 2.627,2.625 v 0.876 z m 1.751,-151.447 c 0,-1.751 -0.585,-2.626 -1.751,-2.626 -1.169,0.582 -2.044,0.875 -2.626,0.875 0,-0.875 2.332,-3.21 7.003,-7.003 -0.584,-1.022 -0.875,-2.188 -0.875,-3.502 h 2.626 l -0.875,4.378 v 0.875 h 0.875 c 1.166,-0.147 1.751,-0.732 1.751,-1.751 -0.585,0 -0.875,-0.294 -0.875,-0.875 0.581,0 0.875,-0.294 0.875,-0.876 -0.585,0 -0.875,-0.294 -0.875,-0.875 0.581,0 0.875,-0.294 0.875,-0.876 -0.585,0 -0.875,-0.294 -0.875,-0.875 0.581,0 1.457,-0.294 2.626,-0.876 v 0.876 c -0.585,1.019 -0.876,2.189 -0.876,3.502 l 1.751,0.875 h 0.876 c 0,-1.46 1.166,-2.336 3.501,-2.626 2.333,3.354 3.502,5.396 3.502,6.128 -1.751,0 -2.92,1.457 -3.502,4.377 -1.169,0 -1.751,0.29 -1.751,0.875 -1.169,-0.585 -2.045,-0.875 -2.626,-0.875 v -0.876 c 2.332,-1.897 3.502,-3.648 3.502,-5.252 l -1.751,-0.875 c -3.502,1.166 -5.252,2.626 -5.252,4.376 0,1.314 -1.17,2.48 -3.502,3.502 z m 0,79.663 c 0,-3.502 -1.46,-5.252 -4.377,-5.252 V 42.02 l 0.875,-4.377 c 1.166,0.581 2.042,0.875 2.627,0.875 v 1.751 l -0.876,1.751 c 1.895,0 3.355,0.291 4.377,0.876 v -3.502 c 0.876,0 1.751,0.875 2.627,2.626 0,1.166 -0.585,1.751 -1.751,1.751 0,-0.585 -0.294,-0.875 -0.876,-0.875 v 0.875 l 0.876,4.377 z m -4.377,7.879 V 53.4 c 0.144,-1.169 0.728,-1.75 1.751,-1.75 l 1.751,2.626 v 0.875 z m 0,-19.26 c 0,-0.875 -0.584,-2.044 -1.751,-3.501 l 2.626,-1.751 h 0.876 l -0.876,5.252 z m -0.875,78.788 c 0,-0.585 -0.294,-1.46 -0.876,-2.626 h 2.626 c 0,0.581 0.291,1.456 0.876,2.626 z m -2.626,-76.161 h 0.875 v 1.751 h -0.875 z m 0,11.38 v -1.751 c 0.581,0 1.456,-0.294 2.626,-0.875 l 0.875,1.751 v 0.875 z m -0.876,60.404 c 0,-0.876 0.876,-1.751 2.626,-2.627 h 0.876 v 0.876 c 0,1.166 -0.585,1.751 -1.751,1.751 z m -0.875,-53.4 v -2.627 c 1.166,-1.46 1.751,-2.626 1.751,-3.501 1.166,0.581 2.041,0.875 2.626,0.875 v 2.626 c -1.751,0 -2.626,0.876 -2.626,2.627 z m -0.876,-88.417 c 0.582,-1.17 0.876,-2.045 0.876,-2.627 h 1.751 c 2.917,0 4.667,1.166 5.252,3.502 -1.751,0 -2.626,0.581 -2.626,1.751 l 1.75,0.875 c 0,-0.584 0.291,-0.875 0.876,-0.875 v 0.875 c 0,1.167 -0.585,1.751 -1.751,1.751 h -0.875 c -2.336,-3.501 -4.087,-5.252 -5.253,-5.252 m -1.751,75.285 c 0.582,-1.169 0.876,-2.045 0.876,-2.626 1.166,0 1.751,0.581 1.751,1.751 v 0.875 z m 0,71.785 h 2.627 v 1.75 h -0.876 c -1.169,-0.147 -1.751,-0.732 -1.751,-1.75 m -0.875,-8.755 v -2.626 h 0.875 c 0,0.581 0.291,1.457 0.876,2.626 z m -0.876,-142.693 v -0.875 c 1.02,0 2.48,-1.75 4.378,-5.252 l 3.501,1.751 0.876,-1.751 -1.751,-3.502 h 0.875 l -0.875,-1.751 v -0.875 c 1.457,1.166 2.626,1.75 3.501,1.75 v 7.004 c -1.169,0 -1.75,0.876 -1.75,2.626 h -2.626 l -5.253,0.875 z m 0,29.765 h 2.627 v 1.751 h -0.876 c -1.169,-0.148 -1.751,-0.732 -1.751,-1.751 m 0,63.03 1.751,-0.876 h 0.876 c -0.585,1.166 -0.876,2.042 -0.876,2.627 -1.169,-0.148 -1.751,-0.732 -1.751,-1.751 m 11.381,51.649 c -1.169,-1.898 -1.751,-3.064 -1.751,-3.501 h -1.751 v 1.75 h -1.75 c -0.438,-2.92 -1.314,-4.377 -2.627,-4.377 l -1.751,0.876 -0.875,-3.502 c 1.166,-0.147 1.751,-0.732 1.751,-1.751 -1.17,-0.585 -2.045,-0.875 -2.627,-0.875 v -0.876 l 0.876,-1.751 c -0.585,0 -0.876,-0.293 -0.876,-0.875 h 4.378 c 0.437,4.668 1.313,7.003 2.626,7.003 0.581,-1.169 0.875,-2.045 0.875,-2.626 h 0.876 c 2.332,4.959 3.501,7.585 3.501,7.879 h 0.876 l 0.875,-3.502 c -1.169,-0.147 -1.751,-0.732 -1.751,-1.751 v -0.875 h 0.876 l 1.751,0.875 c 0,-0.584 0.29,-0.875 0.875,-0.875 v 3.502 h 0.875 l 6.128,-0.876 c 0,0.582 0.291,0.876 0.876,0.876 0,-0.585 0.29,-0.876 0.875,-0.876 v 2.627 h -0.875 c -1.17,-0.585 -2.045,-0.876 -2.627,-0.876 l -0.875,1.751 c -1.898,-1.17 -3.649,-1.751 -5.252,-1.751 l -0.876,1.751 c 0.581,0 0.876,0.29 0.876,0.875 -1.17,0 -1.751,0.581 -1.751,1.751 z M -56.902,64.781 -57.778,63.03 v -2.626 h 1.751 l 2.627,1.75 h 0.875 c 0,-1.169 0.291,-1.75 0.876,-1.75 2.332,0.581 3.501,2.041 3.501,4.377 l -1.75,-0.876 h -0.876 l -1.751,0.876 -0.875,-1.751 z m -0.876,17.508 v -0.875 c 1.314,-9.339 3.065,-14.007 5.253,-14.007 l 0.876,1.751 c -1.17,0.581 -2.045,0.876 -2.627,0.876 v 2.625 l 1.751,2.627 c -2.92,0.438 -4.377,2.769 -4.377,7.003 z m -0.874,-104.174 0.874,-4.377 2.627,1.751 c 1.895,-1.17 3.354,-1.751 4.377,-1.751 v 1.751 c -0.585,1.751 -2.336,2.626 -5.253,2.626 z m 0,19.259 h 1.75 v 1.75 h -1.75 z m 0,70.033 h 1.75 v 1.751 h -1.75 z m -0.876,-9.629 V 53.4 h 1.75 l 0.876,3.502 -1.75,0.876 z m -0.875,-75.286 c 0,-0.585 -0.295,-0.876 -0.876,-0.876 0.581,-1.169 0.876,-2.045 0.876,-2.626 h 0.875 c 0,0.581 0.291,1.457 0.876,2.626 z m 5.252,71.784 c 0,-2.483 -1.17,-4.233 -3.501,-5.253 0,1.166 -0.585,1.751 -1.751,1.751 h -0.876 v -1.751 c 0.581,-3.939 1.457,-5.984 2.627,-6.127 1.75,0.437 2.916,1.603 3.501,3.501 -1.17,0 -1.751,0.582 -1.751,1.751 1.457,1.166 2.626,1.751 3.502,1.751 l -0.876,1.751 v 0.875 l 0.876,1.751 z m -6.128,55.151 c 0.581,-1.17 0.876,-2.045 0.876,-2.626 h 0.875 c 0,1.75 0.581,2.626 1.75,2.626 l 1.751,-0.876 0.876,1.751 c 0,1.166 -0.585,1.751 -1.751,1.751 z m 0,-29.764 -0.875,-1.751 c 0.143,-1.169 0.728,-1.751 1.751,-1.751 h 1.751 c -0.876,2.332 -1.751,3.502 -2.627,3.502 m 1.751,12.256 c 0,-1.17 -0.875,-1.751 -2.626,-1.751 v -2.626 c 0,-0.585 0.29,-0.876 0.875,-0.876 l -0.875,-1.751 V 84.04 h 0.875 c 1.166,0 1.751,1.166 1.751,3.502 h 1.75 v -0.876 l -0.874,-1.751 c 1.603,0 3.354,-0.875 5.252,-2.626 v 1.751 l -1.751,2.626 v 4.377 c -1.898,0 -3.358,0.291 -4.377,0.876 M -63.03,-4.377 v -2.626 h 0.876 c 1.456,1.166 2.626,1.751 3.502,1.751 0,1.166 -0.585,1.751 -1.751,1.751 -1.17,-0.585 -2.045,-0.876 -2.627,-0.876 m 0.876,-21.885 c 0,-1.17 -0.585,-1.751 -1.751,-1.751 v -0.875 c 0,-2.921 1.457,-4.671 4.377,-5.253 v -0.876 h 0.876 c 0,2.189 0.58,3.94 1.75,5.253 l -0.876,1.751 -1.75,-0.875 h -1.751 v 2.626 z m -1.751,111.177 h 0.875 v 2.626 h -0.875 z m 0,19.26 c 0.875,-2.336 2.332,-4.087 4.377,-5.253 0,1.751 0.876,2.626 2.626,2.626 v 2.627 c 0,1.166 -0.585,1.751 -1.75,1.751 h -1.751 c -1.461,-1.17 -2.627,-1.751 -3.502,-1.751 m -0.876,-124.309 v -2.626 c 1.313,0 2.189,1.456 2.627,4.376 h -0.876 c -1.169,-0.146 -1.751,-0.731 -1.751,-1.75 m 1.751,10.504 0.876,-4.376 -3.502,1.751 v -2.627 l 6.128,-0.875 v 2.626 h 0.876 l 2.625,-1.751 v 1.751 c -0.294,2.332 -2.625,3.501 -7.003,3.501 m -2.626,0 h 1.751 v 1.751 h -1.751 z m 0,81.414 h 1.751 v 0.875 h -1.751 z m 0,17.509 h 0.875 v 1.75 h -0.875 z m 3.502,-24.512 c 0,-2.921 -0.585,-4.377 -1.751,-4.377 l 0.875,-1.751 v -3.502 c 0,-1.751 -1.169,-2.626 -3.502,-2.626 v -1.751 c 0.582,0 0.876,0.291 0.876,0.876 l 1.751,-0.876 h 0.875 l 1.751,0.876 -0.875,1.75 c 0.875,4.23 2.041,7.442 3.502,9.63 l -2.627,1.751 z m -5.253,-72.66 h 0.875 v 1.751 h -0.875 z m 0,112.054 h 1.75 v 0.875 h -1.75 z m -1.751,-39.394 v -3.502 c 1.166,0.581 2.042,0.875 2.626,0.875 -0.584,1.167 -0.875,2.042 -0.875,2.627 z m -0.875,-85.791 v -0.875 c 0.143,-1.169 0.728,-1.751 1.751,-1.751 l 0.875,1.751 v 0.875 z m -0.875,-6.128 h 1.751 v 2.626 h -1.751 z m 0,10.505 v -0.875 c 0.143,-1.17 0.728,-1.751 1.75,-1.751 l 0.876,1.751 v 0.875 z m 0,110.303 c 0.143,-1.17 0.728,-1.751 1.75,-1.751 h 0.876 l 2.626,1.751 1.751,-0.876 3.502,3.502 h -1.751 z m 0,6.127 v -0.875 c 1.018,0 2.479,-0.585 4.376,-1.751 v 2.626 z m -0.876,-32.39 c 0.144,-1.169 0.728,-1.751 1.751,-1.751 v 1.751 z m -0.875,14.882 c 1.166,0 1.751,-1.46 1.751,-4.377 l 1.75,0.876 c 1.751,0 2.626,-1.17 2.626,-3.502 h 0.876 c 0,1.457 1.166,3.502 3.502,6.128 -4.087,0 -6.128,1.166 -6.128,3.501 -2.92,-0.731 -4.377,-1.607 -4.377,-2.626 m 0,-91.043 c 0,-0.585 -0.294,-1.46 -0.876,-2.626 1.457,0 2.917,-0.585 4.377,-1.751 h 0.876 c 0,0.581 0.29,1.457 0.875,2.627 -1.022,0 -2.773,0.58 -5.252,1.75 m 0.875,85.791 0.876,-1.751 V 74.41 l -1.751,0.876 h -0.876 c 2.333,-2.189 3.502,-4.524 3.502,-7.003 0.581,0 1.456,-0.294 2.626,-0.876 l 0.875,1.751 c -1.169,0 -2.045,2.626 -2.626,7.879 z m -1.751,13.131 v -1.751 c 0.876,0 2.042,-0.585 3.502,-1.751 0,1.166 1.166,1.751 3.501,1.751 v 0.876 l -4.376,0.875 z m 35.892,36.767 1.751,-0.875 1.751,0.875 C -12.84,126.935 1.457,114.97 8.754,91.043 9.336,84.621 9.63,78.788 9.63,73.535 v -5.252 c 0,-1.17 -0.585,-1.751 -1.751,-1.751 H 0 c -0.584,0 -0.875,0.29 -0.875,0.875 l -1.751,-0.875 h -1.751 c -0.585,0 -0.875,0.29 -0.875,0.875 l -1.751,-0.875 h -9.63 c -1.169,0 -1.751,0.581 -1.751,1.751 v 0.875 c 0,1.894 0.291,3.355 0.876,4.377 l -0.876,5.253 0.876,5.252 c -3.502,10.505 -9.339,15.757 -17.509,15.757 h -0.875 c -5.837,-0.875 -8.754,-2.045 -8.754,-3.501 0,-0.732 -2.335,-3.064 -7.003,-7.003 l 0.875,-1.751 v -1.751 c 0,-0.585 -0.294,-0.876 -0.875,-0.876 l 0.875,-1.751 v -5.252 c 0,-0.585 -0.294,-0.875 -0.875,-0.875 1.313,-6.713 5.105,-13.132 11.38,-19.259 2.917,-2.045 4.377,-4.378 4.377,-7.004 h 1.751 c 0,1.166 0.29,1.751 0.875,1.751 6.71,-4.671 11.086,-7.003 13.131,-7.003 C -0.875,31.659 8.754,16.486 8.754,0 v -6.128 c 0,-1.313 0.291,-2.482 0.876,-3.502 0,-12.84 -5.547,-24.221 -16.633,-34.141 -9.339,-6.421 -16.927,-9.629 -22.761,-9.629 -0.585,0 -0.876,0.291 -0.876,0.875 l -4.377,-0.875 h -2.626 c -16.195,0 -29.035,9.629 -38.518,28.889 -1.751,6.127 -2.626,15.172 -2.626,27.137 v 2.627 c 0.143,1.166 0.728,1.751 1.751,1.751 h 1.75 c 1.895,0 3.355,-0.295 4.378,-0.876 l 5.252,0.876 h 7.004 c 1.312,0 2.479,-0.295 3.501,-0.876 1.019,0.581 2.189,0.876 3.502,0.876 l 0.875,-1.751 v -8.754 c 0,-1.314 -0.294,-2.483 -0.875,-3.502 0.581,-1.022 0.875,-2.189 0.875,-3.501 h -0.875 c 2.917,-10.506 8.169,-15.758 15.757,-15.758 h 2.626 c 6.856,0 12.109,5.252 15.758,15.758 l -0.876,1.75 c 0.438,2.332 1.02,3.502 1.751,3.502 -4.086,11.818 -8.463,18.821 -13.131,21.01 -4.815,5.105 -14.738,12.109 -29.764,21.009 -12.841,12.256 -19.259,26.554 -19.259,42.896 v 2.626 c 0,0.582 0.29,0.875 0.875,0.875 l -0.875,1.751 c 0,18.237 10.505,31.659 31.515,40.27 1.166,0.581 4.377,1.166 9.629,1.75"
             style="fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path52" /></g><g
           id="g54"
           transform="translate(355.4987,528.9658)"
           style="fill:#000000;fill-opacity:1"><path
             d="M 0,0 C 1.023,0.455 2.14,0.918 3.281,1.373 4.423,1.825 5.622,2.177 6.756,2.556 8.67,3.175 10.032,3.306 8.899,2.766 7.704,2.198 6.306,1.638 4.817,1.124 3.327,0.61 1.793,0.01 0.25,-0.439 -1.251,-0.845 -1.562,-0.694 0,0 m -76.543,-56.404 c -0.857,-1.146 -1.613,-2.671 -2.461,-4.364 -0.418,-0.849 -0.844,-1.748 -1.278,-2.681 -0.389,-0.952 -0.792,-1.937 -1.202,-2.943 -0.409,-1.008 -0.827,-2.036 -1.249,-3.073 -0.408,-1.043 -0.773,-2.113 -1.178,-3.166 -0.822,-2.106 -1.64,-4.201 -2.424,-6.208 0.379,1.587 0.744,3.085 1.198,4.467 0.428,1.391 0.843,2.696 1.248,3.921 0.379,1.235 0.88,2.34 1.294,3.398 0.431,1.051 0.85,2.028 1.256,2.936 0.819,1.812 1.713,3.294 2.494,4.572 0.796,1.272 1.546,2.312 2.347,3.124 0.553,1.617 1.059,3.07 1.543,4.413 0.481,1.346 1.038,2.529 1.544,3.691 0.522,1.152 1.035,2.262 1.61,3.359 0.606,1.078 1.25,2.16 1.964,3.3 1.384,2.309 3.26,4.71 5.682,7.776 1.279,1.481 2.707,3.121 4.345,4.947 0.857,0.878 1.764,1.808 2.726,2.794 0.963,0.983 1.969,2.03 3.119,3.06 5.619,7.146 12.767,13.818 20.782,19.525 8.012,5.723 16.873,10.477 25.839,14.206 15.767,6.542 32.648,9.987 49.394,10.291 l 3.138,0.015 c 1.046,-0.006 2.09,0.034 3.134,-0.036 2.085,-0.102 4.169,-0.204 6.252,-0.306 2.074,-0.209 4.147,-0.417 6.219,-0.626 2.067,-0.244 4.119,-0.607 6.172,-0.912 8.19,-1.406 16.214,-3.571 23.925,-6.457 15.137,-5.652 29.708,-13.974 42.362,-24.764 12.677,-10.745 23.467,-23.861 31.404,-38.339 8.397,-15.228 14.123,-32.297 16.249,-49.723 0.13,-0.997 0.256,-1.971 0.379,-2.915 0.143,-0.942 0.192,-1.864 0.301,-2.745 0.189,-1.766 0.412,-3.392 0.628,-4.838 0.325,-2.896 0.76,-5.074 1.31,-6.182 0.554,-1.118 0.996,-0.614 1.345,1.055 0.175,0.834 0.325,1.958 0.454,3.313 0.063,0.677 0.125,1.411 0.172,2.195 0.009,0.785 0.018,1.617 0.027,2.49 0.063,8.073 -0.813,16.627 -3.167,26.251 l -1.444,5.472 -1.705,5.404 -0.434,1.35 -0.493,1.329 -0.992,2.658 c -0.337,0.884 -0.653,1.778 -1.01,2.654 l -1.121,2.61 c -2.992,6.956 -6.493,13.726 -10.627,20.106 -8.217,12.781 -18.447,24.348 -30.367,33.898 -5.944,4.788 -12.25,9.146 -18.892,12.943 -6.654,3.771 -13.604,7.024 -20.766,9.727 -7.152,2.734 -14.556,4.793 -22.051,6.304 -7.496,1.509 -15.106,2.496 -22.727,2.769 l -2.493,0.121 -2.502,0.015 c -1.67,0.003 -3.346,0.031 -5.025,0.006 -3.352,-0.17 -6.731,-0.22 -10.087,-0.625 C 22.884,24.574 16.198,23.302 9.711,21.563 -12.941,15.381 -33.977,3.62 -51.071,-12.358 c -8.545,-7.988 -16.201,-16.949 -22.573,-26.783 l -2.377,-3.694 -2.213,-3.797 -1.101,-1.902 c -0.354,-0.641 -0.682,-1.297 -1.023,-1.945 l -2.022,-3.905 c -0.662,-1.307 -1.241,-2.656 -1.862,-3.984 -0.594,-1.34 -1.259,-2.65 -1.778,-4.023 -1.082,-2.726 -2.236,-5.427 -3.14,-8.221 -3.861,-11.081 -6.434,-22.639 -7.445,-34.334 -1.039,-11.683 -0.754,-23.477 1.011,-35.119 1.806,-11.626 5.008,-23.057 9.54,-33.941 4.619,-10.846 10.509,-21.156 17.577,-30.592 9.707,-12.889 21.55,-24.133 34.885,-33.228 13.392,-9.007 28.278,-15.846 43.91,-19.983 15.644,-4.082 31.923,-5.619 47.98,-4.321 16.086,1.164 31.961,5.258 46.691,11.759 21.962,9.715 41.703,25.242 55.495,43.862 3.522,4.592 6.55,9.455 9.358,14.305 0.686,1.222 1.315,2.472 1.963,3.7 0.32,0.616 0.639,1.231 0.957,1.845 0.325,0.609 0.628,1.228 0.906,1.859 0.567,1.252 1.132,2.498 1.695,3.738 0.274,0.623 0.563,1.236 0.82,1.861 0.246,0.631 0.492,1.26 0.737,1.887 3.965,10.006 6.392,20.055 7.394,29.53 0.074,0.675 0.193,1.432 0.306,2.249 0.1,0.82 0.207,1.699 0.318,2.605 0.119,0.903 0.243,1.834 0.366,2.761 0.062,0.463 0.123,0.926 0.184,1.384 0.04,0.46 0.079,0.916 0.117,1.363 0.471,4.915 0.75,10.508 0.527,14.514 -0.248,4.011 -0.704,6.407 -1.582,5.035 -0.462,-0.72 -0.797,-2.073 -1.045,-3.845 -0.128,-0.886 -0.217,-1.878 -0.32,-2.948 -0.137,-1.068 -0.26,-2.216 -0.374,-3.417 -0.124,-1.2 -0.198,-2.457 -0.341,-3.735 -0.154,-1.276 -0.312,-2.58 -0.469,-3.883 -0.253,-2.617 -0.756,-5.199 -1.156,-7.583 -4.069,-21.725 -13.689,-42.371 -27.589,-59.512 -0.835,-1.1 -1.755,-2.128 -2.658,-3.171 -0.908,-1.038 -1.802,-2.089 -2.725,-3.114 l -2.859,-2.99 -1.432,-1.493 -1.496,-1.428 -3.002,-2.846 c -1.019,-0.928 -2.08,-1.81 -3.119,-2.715 -2.055,-1.842 -4.268,-3.491 -6.434,-5.195 l -0.816,-0.635 -0.844,-0.598 -1.688,-1.194 c -1.133,-0.784 -2.234,-1.616 -3.397,-2.357 l -3.488,-2.221 c -0.585,-0.363 -1.155,-0.752 -1.754,-1.094 l -1.795,-1.026 -3.592,-2.046 -3.686,-1.874 c -2.433,-1.299 -4.991,-2.338 -7.497,-3.483 -10.141,-4.325 -20.832,-7.322 -31.696,-9.078 -1.351,-0.264 -2.724,-0.386 -4.087,-0.566 l -4.097,-0.491 -4.114,-0.297 c -1.372,-0.096 -2.742,-0.215 -4.116,-0.218 -2.748,-0.046 -5.494,-0.17 -8.24,-0.032 l -4.118,0.125 -4.109,0.324 c -2.744,0.164 -5.463,0.581 -8.189,0.932 -1.366,0.152 -2.714,0.426 -4.066,0.669 l -4.055,0.745 c -5.36,1.213 -10.7,2.555 -15.884,4.388 -1.295,0.456 -2.608,0.866 -3.888,1.363 l -3.829,1.524 c -0.637,0.258 -1.278,0.503 -1.91,0.771 l -1.875,0.853 -3.748,1.711 c -4.908,2.459 -9.757,5.058 -14.342,8.079 -0.884,0.565 -1.79,1.142 -2.715,1.733 -0.901,0.627 -1.822,1.269 -2.763,1.924 -0.936,0.662 -1.9,1.326 -2.859,2.037 -0.932,0.746 -1.882,1.506 -2.85,2.282 -3.861,3.11 -7.633,6.928 -11.087,11.42 8.115,-7.882 16.544,-14.215 24.953,-19.361 8.413,-5.157 16.873,-9.021 25.181,-12.031 27.248,-9.816 57.422,-10.074 84.605,-1.31 27.175,8.827 51.184,26.488 67.627,49.674 5.625,7.869 9.938,16.112 12.889,23.974 2.966,7.864 4.57,15.328 5.182,21.699 0.268,3.892 -0.172,4.851 -1.408,2.557 -0.324,-0.602 -0.65,-1.358 -0.973,-2.236 -0.358,-0.869 -0.738,-1.854 -1.108,-2.933 -0.381,-1.076 -0.725,-2.254 -1.133,-3.474 -0.43,-1.212 -0.86,-2.486 -1.283,-3.792 -1.952,-5.705 -4.211,-11.336 -7.006,-16.707 -2.75,-5.389 -5.822,-10.634 -9.347,-15.564 l -1.294,-1.868 -1.38,-1.805 c -0.932,-1.194 -1.817,-2.426 -2.786,-3.59 l -2.929,-3.474 c -0.477,-0.589 -0.995,-1.14 -1.511,-1.694 l -1.543,-1.665 -1.542,-1.667 c -0.527,-0.544 -1.076,-1.064 -1.612,-1.598 -1.085,-1.053 -2.14,-2.14 -3.25,-3.166 l -3.375,-3.028 -0.845,-0.756 -0.878,-0.716 -1.754,-1.433 c -18.173,-14.805 -40.819,-24.439 -64.408,-27.066 -5.893,-0.608 -11.829,-0.988 -17.761,-0.768 -2.969,-0.004 -5.924,0.304 -8.885,0.5 -1.478,0.131 -2.947,0.351 -4.421,0.523 l -2.209,0.275 c -0.735,0.098 -1.462,0.249 -2.194,0.371 l -4.385,0.774 -4.34,0.99 c -0.722,0.171 -1.449,0.321 -2.167,0.509 l -2.142,0.605 c -1.424,0.415 -2.864,0.781 -4.275,1.238 -2.809,0.955 -5.641,1.848 -8.38,2.993 -2.784,1.029 -5.462,2.308 -8.167,3.521 -15.71,7.458 -29.804,18.241 -41.231,31.321 -11.436,13.076 -20.179,28.492 -25.474,45.017 -5.322,16.52 -7.15,34.112 -5.508,51.341 1.62,17.238 6.802,34.11 15.113,49.255 4.807,8.686 10.675,16.779 17.499,24.112 l 0.631,0.696 0.665,0.665 1.331,1.331 c 0.896,0.879 1.763,1.79 2.689,2.643 0.935,0.842 1.872,1.686 2.811,2.531 l 1.412,1.263 1.475,1.198 c 0.984,0.796 1.97,1.594 2.959,2.394 1.007,0.774 2.052,1.508 3.079,2.263 2.032,1.544 4.218,2.893 6.369,4.302 -1.118,-1.054 -2.182,-1.995 -3.206,-2.853 -1.032,-0.847 -1.946,-1.716 -2.876,-2.469 -0.928,-0.755 -1.813,-1.474 -2.672,-2.173 -0.842,-0.718 -1.659,-1.415 -2.468,-2.104 -8.05,-6.847 -15.1,-14.841 -21.164,-23.5 -0.395,-0.53 -0.761,-1.081 -1.113,-1.64 l -1.076,-1.666 -1.076,-1.666 c -0.367,-0.551 -0.715,-1.112 -1.037,-1.69 -1.317,-2.292 -2.69,-4.555 -3.851,-6.933 -2.49,-4.669 -4.503,-9.572 -6.381,-14.51 -3.538,-9.96 -5.901,-20.345 -6.821,-30.86 -0.882,-10.514 -0.482,-21.125 1.251,-31.487 2.874,-16.87 9.094,-33.158 18.3,-47.585 9.183,-14.43 21.338,-26.988 35.521,-36.501 5.828,-3.877 11.952,-7.216 18.273,-10 6.323,-2.779 12.837,-5.042 19.485,-6.624 6.639,-1.61 13.372,-2.657 20.12,-3.174 6.754,-0.472 13.516,-0.341 20.206,0.249 6.695,0.565 13.301,1.816 19.761,3.5 6.452,1.714 12.791,3.854 18.859,6.623 12.142,5.483 23.477,12.794 33.34,21.878 7.38,6.644 13.334,14.174 17.977,21.76 4.644,7.599 7.93,15.306 10.055,22.578 0.368,1.093 0.541,2.116 0.714,2.986 0.16,0.876 0.258,1.626 0.302,2.249 0.043,0.624 0.032,1.121 -0.026,1.492 -0.074,0.377 -0.191,0.626 -0.341,0.746 -0.311,0.245 -0.705,-0.04 -1.276,-0.805 -0.557,-0.77 -1.216,-2.045 -1.921,-3.85 -3.377,-8.159 -6.766,-12.881 -9.524,-16.198 -1.432,-1.635 -2.673,-2.963 -4.007,-4.045 -0.649,-0.553 -1.284,-1.07 -1.918,-1.573 l -0.951,-0.748 c -0.334,-0.234 -0.669,-0.469 -1.008,-0.707 -0.74,-0.516 -1.601,-1.341 -2.537,-2.378 -0.932,-1.039 -2.057,-2.193 -3.156,-3.506 -2.255,-2.577 -4.832,-5.443 -7.253,-7.83 -9.024,-8.861 -19.678,-16.219 -31.413,-21.364 -11.742,-5.107 -24.49,-8.075 -37.452,-8.528 -6.731,-0.213 -13.754,0.003 -20.487,0.775 -4.422,0.441 -8.782,1.315 -13.119,2.281 -1.08,0.26 -2.145,0.577 -3.22,0.859 -1.067,0.308 -2.16,0.537 -3.207,0.913 -2.106,0.711 -4.251,1.319 -6.31,2.169 -8.326,3.145 -16.323,7.26 -23.643,12.401 -7.337,5.103 -14.12,11.06 -19.988,17.837 l -2.203,2.539 -2.07,2.648 c -1.43,1.728 -2.644,3.617 -3.963,5.428 -0.655,0.909 -1.213,1.883 -1.827,2.819 -0.587,0.954 -1.239,1.869 -1.775,2.853 -1.084,1.96 -2.274,3.863 -3.231,5.89 -6.258,12.209 -10.138,25.657 -11.733,39.13 -1.788,14.721 -0.657,29.84 3.486,44.098 4.126,14.269 11.272,27.72 20.913,39.162 15.259,18.063 36.226,31.231 59.076,36.645 7.37,1.78 15.202,2.815 22.383,2.775 13.94,0.005 28.273,-2.104 41.704,-6.931 13.413,-4.788 25.838,-12.409 35.408,-22.049 0.349,-0.35 0.753,-0.697 1.141,-1.093 0.389,-0.395 0.798,-0.8 1.215,-1.201 0.83,-0.805 1.7,-1.59 2.478,-2.288 1.297,-1.265 2.625,-2.558 3.908,-3.808 1.225,-1.307 2.443,-2.542 3.561,-3.65 2.131,-2.302 4.015,-3.98 5.115,-4.386 0.596,-0.195 0.826,0.027 0.773,0.574 -0.06,0.541 -0.364,1.433 -0.96,2.474 -0.577,1.055 -1.358,2.323 -2.242,3.706 -0.947,1.331 -2.013,2.764 -3.08,4.213 -0.641,0.828 -1.316,1.628 -1.989,2.458 -0.69,0.813 -1.354,1.682 -2.151,2.474 -4.178,4.445 -8.794,8.489 -13.676,12.209 -4.898,3.696 -10.083,7.08 -15.594,9.905 -5.496,2.852 -11.247,5.272 -17.193,7.218 -5.947,1.951 -12.117,3.294 -18.383,4.197 l -2.166,0.294 c -0.722,0.103 -1.444,0.203 -2.173,0.247 l -4.362,0.364 c -1.456,0.11 -2.92,0.106 -4.38,0.168 l -2.192,0.072 -2.192,-0.046 C 39.341,-1.818 33.507,-2.422 27.741,-3.356 21.963,-4.256 16.285,-5.725 10.729,-7.534 L 8.648,-8.225 7.607,-8.57 6.585,-8.965 2.495,-10.55 c -2.67,-1.19 -5.375,-2.311 -7.959,-3.685 -20.912,-10.529 -38.557,-27.398 -50.206,-47.717 -7.624,-13.228 -12.561,-28.1 -14.364,-43.453 -1.784,-15.364 -0.505,-31.161 3.878,-46.082 4.364,-14.931 11.828,-28.989 21.77,-41.038 9.92,-12.069 22.332,-22.089 36.184,-29.259 1.557,-0.751 3.423,-1.712 5.065,-2.531 1.649,-0.804 3.012,-1.604 3.461,-2.265 -3.505,0.871 -8.039,2.952 -12.189,5.38 -12.774,7.255 -24.219,16.885 -33.571,28.251 -9.374,11.352 -16.606,24.466 -21.191,38.444 -4.466,13.617 -6.523,28.043 -5.96,42.423 0.578,14.364 3.693,28.62 9.269,41.898 5.573,13.278 13.64,25.512 23.572,35.981 9.935,10.47 21.771,19.156 34.781,25.456 14.146,6.846 29.655,10.846 45.329,11.684 15.68,0.857 31.473,-1.358 46.119,-6.575 14.654,-5.192 28.138,-13.353 39.393,-23.696 11.269,-10.33 20.299,-22.826 26.422,-36.342 1.201,-2.508 2.204,-5.078 3.307,-7.612 0.527,-1.278 0.99,-2.585 1.508,-3.877 0.256,-0.648 0.513,-1.297 0.77,-1.949 0.229,-0.661 0.459,-1.326 0.69,-1.992 0.368,-1.05 0.72,-2.021 1.053,-2.903 0.336,-0.881 0.568,-1.7 0.829,-2.405 0.5,-1.417 0.925,-2.439 1.243,-2.986 0.636,-1.093 0.845,-0.296 0.401,3.097 -0.133,1.09 -0.247,2.022 -0.342,2.8 -0.112,0.773 -0.182,1.4 -0.209,1.882 -0.055,0.966 0.063,1.357 0.358,1.202 0.295,-0.155 0.767,-0.855 1.426,-2.07 0.345,-0.602 0.675,-1.352 1.049,-2.228 0.369,-0.882 0.788,-1.884 1.255,-3.003 0.441,-1.026 0.788,-1.87 1.132,-2.52 0.346,-0.649 0.677,-1.107 0.986,-1.385 0.617,-0.556 1.146,-0.394 1.521,0.404 0.357,0.793 0.638,2.244 0.563,4.202 -0.043,0.978 -0.146,2.09 -0.317,3.321 -0.085,0.615 -0.187,1.261 -0.307,1.934 -0.133,0.669 -0.317,1.355 -0.503,2.072 -0.452,1.638 -0.836,3.295 -1.334,4.909 -0.509,1.615 -1.015,3.223 -1.52,4.827 -1.134,3.163 -2.237,6.345 -3.599,9.415 -2.635,6.179 -5.676,12.231 -9.383,18.023 -3.679,5.808 -7.892,11.446 -12.765,16.842 -4.863,5.406 -10.461,10.486 -16.788,15.205 C 109.849,1.578 94.493,9.07 78.987,13.653 64.098,18.151 47.997,19.741 31.757,18.405 15.499,17.084 -0.882,12.416 -16.049,4.627 c -7.164,-3.688 -13.927,-7.87 -20.279,-12.488 -1.562,-1.187 -3.161,-2.324 -4.686,-3.545 -1.514,-1.239 -3.024,-2.475 -4.531,-3.708 -1.453,-1.298 -2.902,-2.594 -4.349,-3.888 -1.441,-1.303 -2.79,-2.696 -4.189,-4.04 -8.675,-9.979 -16.529,-21.205 -22.46,-33.362"
             style="fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path56" /></g></g></g></g><script
     type="text/javascript"
     id="mesh_polyfill">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
